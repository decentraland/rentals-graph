// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AssetClaimed extends ethereum.Event {
  get params(): AssetClaimed__Params {
    return new AssetClaimed__Params(this);
  }
}

export class AssetClaimed__Params {
  _event: AssetClaimed;

  constructor(event: AssetClaimed) {
    this._event = event;
  }

  get _contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AssetIndexUpdated extends ethereum.Event {
  get params(): AssetIndexUpdated__Params {
    return new AssetIndexUpdated__Params(this);
  }
}

export class AssetIndexUpdated__Params {
  _event: AssetIndexUpdated;

  constructor(event: AssetIndexUpdated) {
    this._event = event;
  }

  get _signer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _newIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _sender(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class AssetRented extends ethereum.Event {
  get params(): AssetRented__Params {
    return new AssetRented__Params(this);
  }
}

export class AssetRented__Params {
  _event: AssetRented;

  constructor(event: AssetRented) {
    this._event = event;
  }

  get _contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _lessor(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _tenant(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _rentalDays(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _pricePerDay(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _isExtension(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get _sender(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get _signature(): Bytes {
    return this._event.parameters[9].value.toBytes();
  }
}

export class ContractIndexUpdated extends ethereum.Event {
  get params(): ContractIndexUpdated__Params {
    return new ContractIndexUpdated__Params(this);
  }
}

export class ContractIndexUpdated__Params {
  _event: ContractIndexUpdated;

  constructor(event: ContractIndexUpdated) {
    this._event = event;
  }

  get _newIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeCollectorUpdated extends ethereum.Event {
  get params(): FeeCollectorUpdated__Params {
    return new FeeCollectorUpdated__Params(this);
  }
}

export class FeeCollectorUpdated__Params {
  _event: FeeCollectorUpdated;

  constructor(event: FeeCollectorUpdated) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class FeeUpdated extends ethereum.Event {
  get params(): FeeUpdated__Params {
    return new FeeUpdated__Params(this);
  }
}

export class FeeUpdated__Params {
  _event: FeeUpdated;

  constructor(event: FeeUpdated) {
    this._event = event;
  }

  get _from(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _to(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MetaTransactionExecuted extends ethereum.Event {
  get params(): MetaTransactionExecuted__Params {
    return new MetaTransactionExecuted__Params(this);
  }
}

export class MetaTransactionExecuted__Params {
  _event: MetaTransactionExecuted;

  constructor(event: MetaTransactionExecuted) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _relayerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _functionData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SignerIndexUpdated extends ethereum.Event {
  get params(): SignerIndexUpdated__Params {
    return new SignerIndexUpdated__Params(this);
  }
}

export class SignerIndexUpdated__Params {
  _event: SignerIndexUpdated;

  constructor(event: SignerIndexUpdated) {
    this._event = event;
  }

  get _signer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Rentals__getRentalResultValue0Struct extends ethereum.Tuple {
  get lessor(): Address {
    return this[0].toAddress();
  }

  get tenant(): Address {
    return this[1].toAddress();
  }

  get endDate(): BigInt {
    return this[2].toBigInt();
  }
}

export class Rentals extends ethereum.SmartContract {
  static bind(address: Address): Rentals {
    return new Rentals("Rentals", address);
  }

  getAssetIndex(
    _contractAddress: Address,
    _tokenId: BigInt,
    _signer: Address
  ): BigInt {
    let result = super.call(
      "getAssetIndex",
      "getAssetIndex(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_signer)
      ]
    );

    return result[0].toBigInt();
  }

  try_getAssetIndex(
    _contractAddress: Address,
    _tokenId: BigInt,
    _signer: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetIndex",
      "getAssetIndex(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_signer)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getContractIndex(): BigInt {
    let result = super.call(
      "getContractIndex",
      "getContractIndex():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getContractIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getContractIndex",
      "getContractIndex():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFee(): BigInt {
    let result = super.call("getFee", "getFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getFee", "getFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeCollector(): Address {
    let result = super.call(
      "getFeeCollector",
      "getFeeCollector():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFeeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeeCollector",
      "getFeeCollector():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getIsRented(_contractAddress: Address, _tokenId: BigInt): boolean {
    let result = super.call(
      "getIsRented",
      "getIsRented(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return result[0].toBoolean();
  }

  try_getIsRented(
    _contractAddress: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getIsRented",
      "getIsRented(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getNonce(_signer: Address): BigInt {
    let result = super.call("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(_signer)
    ]);

    return result[0].toBigInt();
  }

  try_getNonce(_signer: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(_signer)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRental(
    _contractAddress: Address,
    _tokenId: BigInt
  ): Rentals__getRentalResultValue0Struct {
    let result = super.call(
      "getRental",
      "getRental(address,uint256):((address,address,uint256))",
      [
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return changetype<Rentals__getRentalResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getRental(
    _contractAddress: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<Rentals__getRentalResultValue0Struct> {
    let result = super.tryCall(
      "getRental",
      "getRental(address,uint256):((address,address,uint256))",
      [
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Rentals__getRentalResultValue0Struct>(value[0].toTuple())
    );
  }

  getSignerIndex(_signer: Address): BigInt {
    let result = super.call(
      "getSignerIndex",
      "getSignerIndex(address):(uint256)",
      [ethereum.Value.fromAddress(_signer)]
    );

    return result[0].toBigInt();
  }

  try_getSignerIndex(_signer: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSignerIndex",
      "getSignerIndex(address):(uint256)",
      [ethereum.Value.fromAddress(_signer)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getToken(): Address {
    let result = super.call("getToken", "getToken():(address)", []);

    return result[0].toAddress();
  }

  try_getToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("getToken", "getToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  onERC721Received(
    _operator: Address,
    param1: Address,
    _tokenId: BigInt,
    _data: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    _operator: Address,
    param1: Address,
    _tokenId: BigInt,
    _data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptListingCall extends ethereum.Call {
  get inputs(): AcceptListingCall__Inputs {
    return new AcceptListingCall__Inputs(this);
  }

  get outputs(): AcceptListingCall__Outputs {
    return new AcceptListingCall__Outputs(this);
  }
}

export class AcceptListingCall__Inputs {
  _call: AcceptListingCall;

  constructor(call: AcceptListingCall) {
    this._call = call;
  }

  get _listing(): AcceptListingCall_listingStruct {
    return changetype<AcceptListingCall_listingStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _operator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _conditionIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _rentalDays(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _fingerprint(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class AcceptListingCall__Outputs {
  _call: AcceptListingCall;

  constructor(call: AcceptListingCall) {
    this._call = call;
  }
}

export class AcceptListingCall_listingStruct extends ethereum.Tuple {
  get signer(): Address {
    return this[0].toAddress();
  }

  get contractAddress(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get expiration(): BigInt {
    return this[3].toBigInt();
  }

  get indexes(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get pricePerDay(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get maxDays(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get minDays(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get target(): Address {
    return this[8].toAddress();
  }

  get signature(): Bytes {
    return this[9].toBytes();
  }
}

export class AcceptOfferCall extends ethereum.Call {
  get inputs(): AcceptOfferCall__Inputs {
    return new AcceptOfferCall__Inputs(this);
  }

  get outputs(): AcceptOfferCall__Outputs {
    return new AcceptOfferCall__Outputs(this);
  }
}

export class AcceptOfferCall__Inputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }

  get _offer(): AcceptOfferCall_offerStruct {
    return changetype<AcceptOfferCall_offerStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AcceptOfferCall__Outputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }
}

export class AcceptOfferCall_offerStruct extends ethereum.Tuple {
  get signer(): Address {
    return this[0].toAddress();
  }

  get contractAddress(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get expiration(): BigInt {
    return this[3].toBigInt();
  }

  get indexes(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get pricePerDay(): BigInt {
    return this[5].toBigInt();
  }

  get rentalDays(): BigInt {
    return this[6].toBigInt();
  }

  get operator(): Address {
    return this[7].toAddress();
  }

  get fingerprint(): Bytes {
    return this[8].toBytes();
  }

  get signature(): Bytes {
    return this[9].toBytes();
  }
}

export class BumpAssetIndexCall extends ethereum.Call {
  get inputs(): BumpAssetIndexCall__Inputs {
    return new BumpAssetIndexCall__Inputs(this);
  }

  get outputs(): BumpAssetIndexCall__Outputs {
    return new BumpAssetIndexCall__Outputs(this);
  }
}

export class BumpAssetIndexCall__Inputs {
  _call: BumpAssetIndexCall;

  constructor(call: BumpAssetIndexCall) {
    this._call = call;
  }

  get _contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BumpAssetIndexCall__Outputs {
  _call: BumpAssetIndexCall;

  constructor(call: BumpAssetIndexCall) {
    this._call = call;
  }
}

export class BumpContractIndexCall extends ethereum.Call {
  get inputs(): BumpContractIndexCall__Inputs {
    return new BumpContractIndexCall__Inputs(this);
  }

  get outputs(): BumpContractIndexCall__Outputs {
    return new BumpContractIndexCall__Outputs(this);
  }
}

export class BumpContractIndexCall__Inputs {
  _call: BumpContractIndexCall;

  constructor(call: BumpContractIndexCall) {
    this._call = call;
  }
}

export class BumpContractIndexCall__Outputs {
  _call: BumpContractIndexCall;

  constructor(call: BumpContractIndexCall) {
    this._call = call;
  }
}

export class BumpSignerIndexCall extends ethereum.Call {
  get inputs(): BumpSignerIndexCall__Inputs {
    return new BumpSignerIndexCall__Inputs(this);
  }

  get outputs(): BumpSignerIndexCall__Outputs {
    return new BumpSignerIndexCall__Outputs(this);
  }
}

export class BumpSignerIndexCall__Inputs {
  _call: BumpSignerIndexCall;

  constructor(call: BumpSignerIndexCall) {
    this._call = call;
  }
}

export class BumpSignerIndexCall__Outputs {
  _call: BumpSignerIndexCall;

  constructor(call: BumpSignerIndexCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get _contractAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class ExecuteMetaTransactionCall extends ethereum.Call {
  get inputs(): ExecuteMetaTransactionCall__Inputs {
    return new ExecuteMetaTransactionCall__Inputs(this);
  }

  get outputs(): ExecuteMetaTransactionCall__Outputs {
    return new ExecuteMetaTransactionCall__Outputs(this);
  }
}

export class ExecuteMetaTransactionCall__Inputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get _userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _functionData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ExecuteMetaTransactionCall__Outputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeCollector(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeeCall extends ethereum.Call {
  get inputs(): SetFeeCall__Inputs {
    return new SetFeeCall__Inputs(this);
  }

  get outputs(): SetFeeCall__Outputs {
    return new SetFeeCall__Outputs(this);
  }
}

export class SetFeeCall__Inputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeeCall__Outputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }
}

export class SetFeeCollectorCall extends ethereum.Call {
  get inputs(): SetFeeCollectorCall__Inputs {
    return new SetFeeCollectorCall__Inputs(this);
  }

  get outputs(): SetFeeCollectorCall__Outputs {
    return new SetFeeCollectorCall__Outputs(this);
  }
}

export class SetFeeCollectorCall__Inputs {
  _call: SetFeeCollectorCall;

  constructor(call: SetFeeCollectorCall) {
    this._call = call;
  }

  get _feeCollector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeCollectorCall__Outputs {
  _call: SetFeeCollectorCall;

  constructor(call: SetFeeCollectorCall) {
    this._call = call;
  }
}

export class SetUpdateOperatorCall extends ethereum.Call {
  get inputs(): SetUpdateOperatorCall__Inputs {
    return new SetUpdateOperatorCall__Inputs(this);
  }

  get outputs(): SetUpdateOperatorCall__Outputs {
    return new SetUpdateOperatorCall__Outputs(this);
  }
}

export class SetUpdateOperatorCall__Inputs {
  _call: SetUpdateOperatorCall;

  constructor(call: SetUpdateOperatorCall) {
    this._call = call;
  }

  get _contractAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _operators(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class SetUpdateOperatorCall__Outputs {
  _call: SetUpdateOperatorCall;

  constructor(call: SetUpdateOperatorCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
